$(function () {
    $.validator.addMethod(
        "remote_valid",
        function (value, element, jdata) {
            var x = $.ajax({
                type: "POST",
                url: dms_app.baseURL() + "/" + jdata.url,
                async: false,
                dataType: "json",
                data: {
                    _token: dms_app.getToken(),
                    query: jdata.query,
                },
            }).responseText;
            return x === "false" ? false : true;
        },
        function (value, element) {
            return value.msg;
        }
    );
    $.validator.addMethod('filesize', function(value, element, param) {
        console.log('sdfds');return false;
      return this.optional(element) || (element.files[0].size <= param)
    }, 'File size must be less than {0}');

    dms_validation.init();
    $("#signInForm").validate({
        rules: {
            email: {
                email:true,
                required: true,
            },
            password: {
                required: true,
                minlength: 6,
                maxlength: 20,
            },
        },
        messages: {
            email: {
                email:"Please enter valid email.",
                required: "Please enter an email address.",
            },
            password: {
                required: "Please enter a password.",
                minlength: "Please enter 6 character password.",
            },
        },
        errorPlacement: function (error, element) {
            if (element.attr("name") == "password") {
                $("#password").css("background-image", "none");
            }
            if (element.attr("name") == "password") {
                error.insertAfter(element.parent());
            } else {
                error.insertAfter(element);
            }
        },
        submitHandler: function (form) {
            var l = Ladda.create($(form).find("button").get(0));
            l.start();
            form.submit();
        },
    });

    $("#frontSignInForm").validate({
        rules: {
            mobile: {
                required: true,
            },
            password: {
                required: true,
                minlength: 6,
                maxlength: 20,
            },
        },
        messages: {
            mobile: {
                required: "Please enter a mobile.",
            },
            password: {
                required: "Please enter a password.",
                minlength: "Please enter 6 character password.",
            },
        },
        errorPlacement: function (error, element) {
            if (element.attr("name") == "password") {
                $("#password").css("background-image", "none");
            }
            if (element.attr("name") == "password") {
                error.insertAfter(element.parent());
            } else {
                error.insertAfter(element);
            }
        },
        submitHandler: function (form) {
            var l = Ladda.create($(form).find("button").get(0));
            l.start();
            form.submit();
        },
    });

    $("#frontOtpForm").validate({
        rules: {
            otp: {
                required: true,
            },
        },
        messages: {
            otp: {
                required: "Please enter otp.",
            },
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        },
        submitHandler: function (form) {
            var l = Ladda.create($(form).find("button").get(0));
            l.start();
            form.submit();
        },
    });

    $("#frontforgotpasswordFrom").validate({
        rules: {
            mobile: {
                required: true,
            }
        },
        messages: {
            mobile: {
                required: "Please enter a mobile.",
            }
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        },
        submitHandler: function (form) {
            var l = Ladda.create($(form).find("button").get(0));
            l.start();
            form.submit();
        },
    });

    $("#newPasswordForm").validate({
        rules: {
            password: {
                required: true,
                minlength: 6,
                maxlength: 20,
            },
            password_confirm: {
                minlength: 6,
                maxlength: 20,
                equalTo: "#password"
            }
        },
        messages: {
            password: {
                required: "Please enter a password.",
                minlength: "Please enter 6 character password.",
            },
            password_confirm: {
                required: "Please enter a password.",
                minlength: "Please enter 6 character password.",
            },
        },
        errorPlacement: function (error, element) {
            if (element.attr("name") == "password") {
                error.insertAfter(element.parent());
            } else {
                error.insertAfter(element);
            }
        },
        submitHandler: function (form) {
            var l = Ladda.create($(form).find("button").get(0));
            l.start();
            form.submit();
        },
    });
});
dms_validation = {
    init: function () {
        $("#loginForm").validate({
            rules: {
                email: {
                    required: true,
                },
                password: {
                    required: true,
                    minlength: 6,
                    maxlength: 20,
                },
            },
            messages: {
                email: {
                    required: "Please enter an email address.",
                },
                password: {
                    required: "Please enter a password",
                    minlength: "Please enter 6 character password.",
                },
            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "password") {
                    $("#password").css("background-image", "none");
                }
                if (element.attr("name") == "password") {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                var l = Ladda.create($(form).find("button").get(0));
                l.start();
                form.submit();
            },
        });
        $("#forgotpasswordFrom").validate({
            rules: {
                email: {
                    required: true,
                    email: true,
                },
            },
            messages: {
                email: {
                    required: "Please enter email",
                    email: "Please enter a valid email address",
                },
            },
            submitHandler: function (form) {
                var l = Ladda.create($(form).find("button").get(0));
                l.start();
                form.submit();
            },
        });
        $("#confirmnewpasswordform").validate({
            rules: {
                old_password: {
                    required: function (element) {
                        return (
                            $("#new_password").val() != "" ||
                            $("#confirm_password").val() != "" ||
                            $("#old_password").val() == ""
                        );
                    },
                    minlength: 6,
                    remote: {
                        url: dms_app.baseURL() + "/admin/checkpassword",
                        type: "post",
                        headers: {
                            "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr(
                                "content"
                            ),
                        },
                        //dataType: 'text',
                        query: {
                            old_password: function () {
                                return $("#ChangePasswordForm #old_password").val();
                            },
                        },
                    },
                },
                password: {
                    required: true,
                    minlength: 6,
                    maxlength: 20,
                },
                confirm_password: {
                    required: true,
                    equalTo: "#password",
                },
            },
            messages: {
                old_password: {
                    required: "Please enter old password.",
                    minlength: "Please enter minimum 6 character.",
                    remote: "Old password is incorrect.",
                },
                password: {
                    required: "Please enter new password",
                    minlength: "Please enter a minimum of 6 characters",
                    maxlength: "Please enter a maximum of 20 characters",
                },
                confirm_password: {
                    required: "Please enter confirm password",
                    equalTo: "Please enter same as new password.",
                },
            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "password") {
                    error.insertAfter(element.parent());
                } else if (element.attr("name") == "confirmpassword") {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                var l = Ladda.create($(form).find("button").get(0));
                l.start();
                form.submit();
            },
        });

        $("#resetpasswordform").validate({
            rules: {
                password: {
                    required: true,
                    minlength: 6,
                    maxlength: 20,
                },
                confirmpassword: {
                    required: true,
                    equalTo: "#password",
                },
            },
            messages: {
                password: {
                    required: "Please enter new password",
                    minlength: "Please enter a minimum of 6 characters",
                    maxlength: "Please enter a maximum of 20 characters",
                },
                confirmpassword: {
                    required: "Please enter confirm password",
                    equalTo: "Please enter same as new password.",
                },
            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "password") {
                    error.insertAfter(element.parent());
                } else if (element.attr("name") == "confirmpassword") {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                var l = Ladda.create($(form).find("button").get(0));
                l.start();
                form.submit();
            },
        });

        $('#editaccountsettings').submit(function (e) {
            e.preventDefault();
            const phoneNumber = $('input[name=full]').val();
            var countryData = phoneInput.getSelectedCountryData();
            $('#con_code').val('+'+countryData.dialCode);
            $('#con_flag').val(countryData.iso2);
        }).validate({
            rules: {
                username: {
                    required: true,
                },
                mobile_no: {
                    required: true,
                    number:true,
                    //maxlength:10,
                },
                rights: {
                    required: true,
                },
                'profile-img-file-input': {
                    required: function(element) {
                        return $("#cover_img_hidden").val() == "" ? true : false;
                    },
                    filesize: 5,
                },

            },
            messages: {
                username: {
                    required: "Please enter name.",
                },
                mobile_no: {
                    required: "Please enter Phone Number",
                    //maxlength: "Please enter 10 digits",
                },
                rights: {
                    required: "Please select rights",
                },
                'profile-img-file-input': {
                    required: 'Please upload Profile image',
                    filesize: 'Please upload file size 5mb.',
                },

            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "rights") {
                    error.insertAfter(element.parent().parent());
                }else if (element.attr("name") == "mobile_no") {
                    error.insertAfter(element.parent().parent());
                } else if (element.attr("type") == "input") {
                    error.insertAfter(element.parent().parent());
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                var coverImg = $(form).find("input[name=cover_image]");
                if(coverImg[0].files.length){
                    if(coverImg[0].files[0].size > 5000000){
                        Toastify({
                            newWindow: true,
                            text: "File size must be less than 5MB!",
                            gravity: "top",
                            position: "right",
                            className: "bg-danger",
                            stopOnFocus: true,
                            duration: 3000,
                            close: true
                        }).showToast();
                        return false;
                    }
                }
                form.submit();
                formloader.start(form);
            }
        });


        $('#userform').submit(function (e) {
            e.preventDefault();
            const phoneNumber = $('input[name=full]').val();
            var countryData = phoneInput.getSelectedCountryData();
            $('#userform #con_code').val('+'+countryData.dialCode);
            $('#userform #con_flag').val(countryData.iso2);
        }).validate({
            rules: {
                username: {
                    required: true,
                },
                mobile_no: {
                    required: true,
                    number:true,
                    //maxlength:10,
                },
                email: {
                    required: true,
                    email: true,
                    remote_valid: {
                        url: "admin/checkuseremailexist",
                        msg: "Email already registered.",
                        query: {
                            email: function () {
                                return $("#userform #email").val();
                            },
                        },
                    },
                },
                password: {
                    required: true,
                    minlength: 6,
                    maxlength: 20,
                },
                confirm_password: {
                    required: true,
                    equalTo: "#password",
                },
                rights: {
                    required: true,
                },
                cover_img: {
                    required: function(element) {
                        return $("#cover_img_hidden").val() == "" ? true : false;
                    }
                },
                status_field:{
                    required: true,
                },

            },
            messages: {
                username: {
                    required: "Please enter name.",
                },
                mobile_no: {
                    required: "Please enter Phone Number",
                    //maxlength: "Please enter 10 digits",
                },
                email: {
                    required: "Enter email address.",
                    email: "Enter valid email address.",
                },
                password: {
                    required: "Please enter new password",
                    minlength: "Please enter a minimum of 6 characters",
                    maxlength: "Please enter a maximum of 20 characters",
                },
                confirm_password: {
                    required: "Please enter confirm password",
                    equalTo: "Please enter same as new password.",
                },
                rights: {
                    required: "Please select rights",
                },
                cover_img: {
                    required: 'Please upload Profile image'
                },
                status_field:{
                    required: 'Please select status'
                },

            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "rights") {
                    error.insertAfter(element.parent().parent());
                }else if (element.attr("name") == "mobile_no") {
                    error.insertAfter(element.parent().parent());
                } else if (element.attr("type") == "input") {
                    error.insertAfter(element.parent().parent());
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                var coverImg = $(form).find("input[name=cover_image]");
                if(coverImg[0].files.length){
                    if(coverImg[0].files[0].size > 5000000){
                        Toastify({
                            newWindow: true,
                            text: "File size must be less than 5MB!",
                            gravity: "top",
                            position: "right",
                            className: "bg-danger",
                            stopOnFocus: true,
                            duration: 3000,
                            close: true
                        }).showToast();
                        return false;
                    }
                }
                form.submit();
                formloader.start(form);
            }
        });


        $('#devoteeform').submit(function (e) {
            e.preventDefault();
            const phoneNumber = $('input[name=full]').val();
            var countryData = phoneInput.getSelectedCountryData();
            $('#devoteeform #con_code').val('+'+countryData.dialCode);
            $('#devoteeform #con_flag').val(countryData.iso2);
            //for whatsapp number
            var countryData1 = phoneInput1.getSelectedCountryData();
            $('#devoteeform #whatsapp_con_code').val('+'+countryData1.dialCode);
            $('#devoteeform #whatsapp_con_flag').val(countryData1.iso2);
        }).validate({
            rules: {
                surname: {
                    required: true,
                },
                first_name: {
                    required: true,
                },
                mobile_no: {
                    required: true,
                    number:true,
                    remote_valid: {
                        url: "admin/checkdevoteemobileexist",
                        msg: "Mobile number already registered.",
                        query: {
                            mobile_no: function () {
                                return $("#devoteeform #mobile_no").val();
                            },
                            edit_type: function () {
                                return $("#devoteeform #edit_type").val();
                            },
                            devotee_hidden_id: function () {
                                return $("#devoteeform #devotee_hidden_id").val();
                            },
                        },
                    },
                    //maxlength:10,
                },
                // whatsapp_no: {
                //     required: true,
                //     number:true,
                //     //maxlength:10,
                // },
                // dob: {
                //     required: true,
                // },
                // gender: {
                //     required: true,
                // },
                // address: {
                //     required: true,
                // },
                // whatsapp_no:{
                //     number:true,
                // },
                // area: {
                //     required: true,
                // },
                // country_id: {
                //     required: true,
                // },
                // state_id: {
                //     required: true,
                // },
                // city_id: {
                //     required: true,
                // },
                // cover_img: {
                //     required: function(element) {
                //         return $("#cover_img_hidden").val() == "" ? true : false;
                //     }
                // },

            },
            messages: {
                surname: {
                    required: "Please enter surname.",
                },
                first_name: {
                    required: "Please enter first name.",
                },
                mobile_no: {
                    required: "Please enter phone number",
                    //maxlength: "Please enter 10 digits",
                },
                // dob: {
                //     required: "Please select dob.",
                // },
                // gender: {
                //     required: "Please select gender.",
                // },
                // address: {
                //     required: "Please enter address.",
                // },
                // area: {
                //     required: "Please enter area/village.",
                // },
                // whatsapp_no:{
                //     required: "Please enter whatsapps Number",
                //    // maxlength: "Please enter 10 digits",
                // },
                // country_id: {
                //     required: "Please select country.",
                // },
                // state_id: {
                //     required: "Please select state.",
                // },
                // city_id: {
                //     required: "Please select city.",
                // },
                // cover_img: {
                //     required: 'Please upload Profile image'
                // },

            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "gender") {
                    error.insertAfter(element.parent().parent());
                }else if (element.attr("name") == "mobile_no") {
                    error.insertAfter(element.parent().parent());
                }else if (element.attr("type") == "input") {
                    error.insertAfter(element.parent().parent());
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                var coverImg = $(form).find("input[name=cover_image]");
                if(coverImg[0].files.length){
                    if(coverImg[0].files[0].size > 5000000){
                        Toastify({
                            newWindow: true,
                            text: "File size must be less than 5MB!",
                            gravity: "top",
                            position: "right",
                            className: "bg-danger",
                            stopOnFocus: true,
                            duration: 3000,
                            close: true
                        }).showToast();
                        return false;
                    }
                }
                form.submit();
                formloader.start(form);
            }
        });

        $('#frontdevoteeform').submit(function (e) {
            e.preventDefault();
            const phoneNumber = $('input[name=full]').val();
            var countryData = phoneInput.getSelectedCountryData();
            $('#devoteeform #con_code').val('+'+countryData.dialCode);
            $('#devoteeform #con_flag').val(countryData.iso2);
            //for whatsapp number
            var countryData1 = phoneInput1.getSelectedCountryData();
            $('#devoteeform #whatsapp_con_code').val('+'+countryData1.dialCode);
            $('#devoteeform #whatsapp_con_flag').val(countryData1.iso2);
        }).validate({

            rules: {
                surname: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                first_name: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                last_name: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                email: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                dob: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                gender: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                mobile_no: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    },
                    number:true,
                    remote_valid: {
                        url: "admin/checkdevoteemobileexist",
                        msg: "Mobile number already registered.",
                        query: {
                            mobile_no: function () {
                                return $("#devoteeform #mobile_no").val();
                            },
                            edit_type: function () {
                                return $("#devoteeform #edit_type").val();
                            },
                            devotee_hidden_id: function () {
                                return $("#devoteeform #devotee_hidden_id").val();
                            },
                        },
                    },
                    //maxlength:10,
                },
                whatsapp_no: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    },
                    number:true,
                    //maxlength:10,
                },
                mobile_no_2: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    },
                    number:true,
                    remote_valid: {
                        url: "admin/checkdevoteemobileexist",
                        msg: "Mobile number already registered.",
                        query: {
                            mobile_no: function () {
                                return $("#devoteeform #mobile_no_2").val();
                            },
                            edit_type: function () {
                                return $("#devoteeform #edit_type").val();
                            },
                            devotee_hidden_id: function () {
                                return $("#devoteeform #devotee_hidden_id").val();
                            },
                        },
                    },
                    //maxlength:10,
                },
                address: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                area: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                country_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                state_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                city_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                native_place: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                marital_status: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1);
                        },
                    }
                },
                marriage_date: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 1 && $("input[type=radio][name=marital_status]:checked").val() == '2');
                        },
                    }
                },

                occupatoin_type: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 2);
                        },
                    }
                },
                industry_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 2 && $("input[type=radio][name=occupatoin_type]:checked").val() != '3');
                        },
                    }
                },
                title: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 2);
                        },
                    }
                },
                od_country_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 2);
                        },
                    }
                },
                od_state_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 2);
                        },
                    }
                },
                od_city_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 2);
                        },
                    }
                },

                pa_address: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                pa_pincode: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                pa_area: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                pa_country_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                pa_state_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                pa_city_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ca_address: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ca_pincode: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ca_area: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ca_country_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ca_state_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ca_city_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ma_address: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ma_pincode: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ma_area: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ma_country_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ma_state_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },
                ma_city_id: {
                    required: {
                        depends: function(element) {
                            var c_tab = $("ul.nav-tabs-custom li a.active").parent('li').index();
                            c_tab = (parseInt(c_tab) + 1);
                            return (c_tab == 3);
                        },
                    }
                },


                // cover_img: {
                //     required: function(element) {
                //         return $("#cover_img_hidden").val() == "" ? true : false;
                //     }
                // },

            },
            messages: {
                surname: {
                    required: "Please enter surname.",
                },
                first_name: {
                    required: "Please enter first name.",
                },
                last_name: {
                    required: "Please enter last name.",
                },
                email: {
                    required: "Please enter email id",
                },
                dob: {
                    required: "Please select dob.",
                },
                gender: {
                    required: "Please select gender.",
                },
                mobile_no: {
                    required: "Please enter phone number",
                    //maxlength: "Please enter 10 digits",
                },
                whatsapp_no:{
                    required: "Please enter whatsapps Number",
                   // maxlength: "Please enter 10 digits",
                },
                mobile_no_2: {
                    required: "Please enter phone number 2",
                    //maxlength: "Please enter 10 digits",
                },
                address: {
                    required: "Please enter address.",
                },
                area: {
                    required: "Please enter area/village.",
                },
                country_id: {
                    required: "Please select country.",
                },
                state_id: {
                    required: "Please select state.",
                },
                city_id: {
                    required: "Please select city.",
                },
                native_place: {
                    required: "Please enter native place.",
                },
                marital_status: {
                    required: "Please choose marital status.",
                },
                marriage_date: {
                    required: "Please select marriage date.",
                },

                occupatoin_type: {
                    required: "Please select occupatoin type.",
                },
                industry_id: {
                    required: "Please select industry.",
                },
                title: {
                    required: "Please enter title.",
                },
                od_country_id: {
                    required: "Please select country.",
                },
                od_state_id: {
                    required: "Please select state.",
                },
                od_city_id: {
                    required: "Please select city.",
                },

                pa_address: {
                    required: "Please enter address.",
                },
                pa_pincode: {
                    required: "Please enter pincode.",
                },
                pa_area: {
                    required: "Please enter area/village.",
                },
                pa_country_id: {
                    required: "Please select country.",
                },
                pa_state_id: {
                    required: "Please select state.",
                },
                pa_city_id: {
                    required: "Please select city.",
                },
                ca_address: {
                    required: "Please enter address.",
                },
                ca_pincode: {
                    required: "Please enter pincode.",
                },
                ca_area: {
                    required: "Please enter area/village.",
                },
                ca_country_id: {
                    required: "Please select country.",
                },
                ca_state_id: {
                    required: "Please select state.",
                },
                ca_city_id: {
                    required: "Please select city.",
                },
                ma_address: {
                    required: "Please enter address.",
                },
                ma_pincode: {
                    required: "Please enter pincode.",
                },
                ma_area: {
                    required: "Please enter area/village.",
                },
                ma_country_id: {
                    required: "Please select country.",
                },
                ma_state_id: {
                    required: "Please select state.",
                },
                ma_city_id: {
                    required: "Please select city.",
                },
                // cover_img: {
                //     required: 'Please upload Profile image'
                // },

            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "gender" || element.attr("name") == "marital_status" || element.attr("name") == "occupatoin_type") {
                    error.insertAfter(element.parent().parent());
                }else if (element.attr("name") == "mobile_no") {
                    error.insertAfter(element.parent().parent());
                }else if (element.attr("type") == "input") {
                    error.insertAfter(element.parent().parent());
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                var coverImg = $(form).find("input[name=cover_image]");
                if(coverImg[0].files.length){
                    if(coverImg[0].files[0].size > 5000000){
                        Toastify({
                            newWindow: true,
                            text: "File size must be less than 5MB!",
                            gravity: "top",
                            position: "right",
                            className: "bg-danger",
                            stopOnFocus: true,
                            duration: 3000,
                            close: true
                        }).showToast();
                        return false;
                    }
                }
                form.submit();
            }
        });

        $("#countryform").validate({
            rules: {
                country_code: {
                    required: true,
                },
                title: {
                    required: true,
                },
            },
            messages: {
                country_code: {
                    required: "Please enter country code",
                },
                title: {
                    required: "Please enter country name",
                },
            },
            errorPlacement: function (error, element) {
                    error.insertAfter(element);
            },
            submitHandler: function (form) {
                var l = Ladda.create($(form).find("button").get(0));
                l.start();
                form.submit();
            },
        });

        $("#stateform").validate({
            rules: {
                country_id: {
                    required: true,
                },
                title: {
                    required: true,
                },
            },
            messages: {
                country_id: {
                    required: "Please select country",
                },
                title: {
                    required: "Please enter state name",
                },
            },
            errorPlacement: function (error, element) {
                    error.insertAfter(element);
            },
            submitHandler: function (form) {
                var l = Ladda.create($(form).find("button").get(0));
                l.start();
                form.submit();
            },
        });

        $("#cityform").validate({
            rules: {
                country_id: {
                    required: true,
                },
                state_id: {
                    required: true,
                },
                title: {
                    required: true,
                },
            },
            messages: {
                country_id: {
                    required: "Please select country",
                },
                state_id: {
                    required: "Please select state",
                },
                title: {
                    required: "Please enter city name",
                },
            },
            errorPlacement: function (error, element) {
                    error.insertAfter(element);
            },
            submitHandler: function (form) {
                var l = Ladda.create($(form).find("button").get(0));
                l.start();
                form.submit();
            },
        });

        $("#categoryform").validate({
            rules: {
                name: {
                    required: true,
                },
            },
            messages: {
                name: {
                    required: "Please enter category name",
                },
            },
            errorPlacement: function (error, element) {
                    error.insertAfter(element);
            },
            submitHandler: function (form) {
                var l = Ladda.create($(form).find("button").get(0));
                l.start();
                form.submit();
            },
        });
    },
};
dms_loader = {
    start: function (element) {
        element
            .attr("disabled", "disabled")
            .addClass("spinner-text")
            .append(
                '<div class="spinner"><span class="double-bounce1"></span><span class="double-bounce2"></span></div>'
            );
    },
    /* stop: function(element){
		element.removeAttr('disabled').removeClass('spinner-text').children('.spinner').remove();
	},
	preStart: function(){
		$(".preloadertwo").show();
	},
	preStop: function(element){
		$(".preloadertwo").hide();
	} */
};
dms_modal = {
    confirmModal: function (url, dynamicmsg = "") {
        if (dynamicmsg != "") {
            $(".dynamicmsg").html(dynamicmsg);
        }
        $("#deleteRecordModal").modal("show", { backdrop: "true" });
        $("#delete_form").attr("action", url);
    },
    deletemultipleModal: function (url, dynamicmsg = "") {
        if (dynamicmsg != "") {
            $(".dynamicmsg").html(dynamicmsg);
        }
        var values = $("input[name^='deleteuser']:checked").map(function (idx, ele) {
           return $(ele).val();
        }).get();
        $('#multiple_userid').val(values);
        $("#deleteRecordModal").modal("show", { backdrop: "true" });
        $("#delete_form").attr("action", url);
    },
    generalModal: function (url, type, button_text) {
        Swal.fire({
            title: "Are you sure?",
            icon: type,
            showCancelButton: true,
            confirmButtonText: button_text,
            buttonsStyling: false,
            customClass: {
                confirmButton: "btn btn-primary btn-wh-130-50 m-2",
                cancelButton: "btn btn-light2 btn-wh-130-50 m-2",
            },
        }).then((result) => {
            if (result.value) {
                window.location.href = url;
            }
        });
    },
    defaultOffcanvas: function (url, title) {
        $.ajax({
            url: url,
            success: function (response) {
                $("#defaultOffcanvas .offcanvas-body").html("");
                $("#defaultOffcanvas .offcanvas-body").html(response);
            },
        });
        $("#defaultOffcanvas").offcanvas("show", { backdrop: "true" });
    },
    largeOffcanvas: function (url, title, icon) {
        $.ajax({
            url: url,
            success: function (response) {
                $("#largeOffcanvas .icon").addClass(icon);
                $("#largeOffcanvas #canvasTitle").html(title);
                $("#largeOffcanvas .offcanvas-body").html("");
                $("#largeOffcanvas .offcanvas-body").html(response);
                // initmcustomscrollbar();
            },
        });
        $("#largeOffcanvas").offcanvas("show", { backdrop: "true" });
    },
    xlargeOffcanvas: function (url, title) {
        $.ajax({
            url: url,
            success: function (response) {
                $("#xlargeOffcanvas #xloffcanvasRightLabel").html(title);
                $("#xlargeOffcanvas .offcanvas-body").html("");
                $("#xlargeOffcanvas .offcanvas-body").html(response);
                $(".reflow-tbl-md").reflowTable({ autoWidth: 991 });
            },
        });
        $("#xlargeOffcanvas").offcanvas("show", { backdrop: "true" });
    },
};
dms_app = {
    baseURL: function () {
        return $("base").attr("href");
    },
    getToken: function () {
        return $('meta[name="csrf-token"]').attr("content");
    },
    ajaxRequest: function (reqURL, reqData, reqMethod = "", reqDataType = "") {
        return axios({
            baseURL: dms_app.baseURL(),
            url: reqURL,
            method: reqMethod != "" ? reqMethod : "post",
            headers: {
                "Content-Type":
                    reqDataType != ""
                        ? reqDataType
                        : "application/x-www-form-urlencoded",
            },
            data: reqData,
            async: false,
        });
    },
    getckeditor: function (element, ck_config) {
        if (ck_config == "") {
            var ck_config = {
                height: "20em",
                removeButtons:
                    "Source,Templates,Save,NewPage,ExportPdf,Preview,Print,Cut,Undo,Redo,Copy,Paste,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,About,Maximize,BGColor,ShowBlocks,TextColor,Styles,Format,Font,FontSize,Iframe,Flash,Table,Image,HorizontalRule,Smiley,SpecialChar,PageBreak,Link,Unlink,Anchor,Language,BidiRtl,BidiLtr,JustifyLeft,Blockquote,Outdent,Indent,CreateDiv,JustifyCenter,JustifyRight,JustifyBlock,BulletedList,NumberedList,CopyFormatting,RemoveFormat,Underline,Strike,Superscript,Subscript",
                removePlugins: "elementspath",
            };
        }
        var eleid = element.attr("id");
        if ($("#" + eleid).length) {
            CKEDITOR.replace(eleid, ck_config);
            CKEDITOR.config.allowedContent = true;
        }
    },
    destroyeditor: function (element) {
        var eleid = element.attr("id");
        for (eleid in CKEDITOR.instances) {
            CKEDITOR.instances[eleid].destroy();
        }
    },
    notifyWithtEle: function (msg, type, pos, timeout) {
        pos = "";
        timeout = "";
        var noty = new Noty({
            theme: "metroui",
            text: msg,
            type: type,
            layout: pos != "" ? pos : "topRight",
            timeout: 2000000,
            closeWith: ["click"],
        });
        noty.show();
    },
    /* 	getautoaddress: function(id){
			var input = document.getElementById(id);
			google.maps.event.addDomListener(input,'keydown',function(event){
				if(event.keyCode === 13){
					event.preventDefault();
				}
			});
			return new google.maps.places.Autocomplete(input);
			// return new google.maps.places.Autocomplete(input,{componentRestrictions:{'country':['au','in']}});
		}, */
    readURL: function (input, image) {
        var fileInput = input;
        var filePath = fileInput.val();
        var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.svg)$/i;
        if (!allowedExtensions.exec(filePath)) {
            dms_app.notifyWithtEle(
                "Only PNG and JPEG files are permitted",
                "error"
            );
            fileInput.val("");
        } else {
            if (input[0].files && input[0].files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    image.attr("src", e.target.result);
                };
                reader.readAsDataURL(input[0].files[0]);
            }
        }
    },
    /*	getDataTable: function(eleid){
			if($('#'+eleid).length){
				$('#'+eleid).DataTable({
					responsive: true,
					fixedHeader: false,
					searching: false,
					paging: true,
					ordering:true,
					info: true,
					lengthChange:false,
					pagingType: 'full_numbers',
					language: {
						paginate: {
						  next: '<i class="fas fa-chevron-double-right"></i>',
						  previous: '<i class="fas fa-chevron-double-left"></i>',
						  last: 'Last <i class="fas fa-chevron-double-right"></i>',
						  first : '<i class="fas fa-chevron-double-left"></i> First'
						}
					},
					order: [[ 0, 'desc' ]]
				});
			}
		},
		uploadLogo : function(fromid){
			var form = $('#'+fromid);
			dms_app.ajaxRequest(form.attr("action"),new FormData(form[0])).then(res => {
				if(res.data.success == "true"){
					dms_app.notifyWithtEle(res.data.message,'success');
				}
				if(res.data.success == "false"){
					dms_app.notifyWithtEle(res.data.message,'error');
				}
			 }).catch(err => { return false; });
		}, */
    getCities: function (state, view_nosupremejob_count = 0) {
        var state_id = $(state).val();
        var $city = $("#city");
        $city.empty(); // remove old options
        $city.append(
            $("<option></option>").attr("value", "").text("Please Select")
        );
        if (state_id != "") {
            var url = "cities/" + state_id;
            if (view_nosupremejob_count == 1) {
                url = "cities/" + state_id + "?view_nosupremejob_count=1";
            }
            $(".main-loader").show();
            dms_app
                .ajaxRequest(url, "", "get")
                .then((res) => {
                    $(".main-loader").hide();
                    if (res.data.length > 0) {
                        $.each(res.data, function (key, value) {
                            var text = value.title;
                            if (
                                value.selectedId != "" &&
                                value.selectedId == value.id
                            ) {
                                selected = "selected";
                            } else {
                                selected = "";
                            }
                            $city.append(
                                $("<option></option>")
                                    .attr("value", value.id)
                                    .text(text)
                            );
                        });
                    }
                })
                .catch((err) => {
                    return false;
                });
        }
    },
    getSubCategory: function (category, view_nosupremejob_count = 0) {
        var category_id = $(category).val();
        var $subcategory = $("#subacategory");
        $subcategory.empty(); // remove old options
        $subcategory.append(
            $("<option></option>").attr("value", "").text("Please Select")
        );
        if (category_id != "") {
            var url = "admin/subcategories/" + category_id;
            if (view_nosupremejob_count == 1) {
                url =
                    "admin/subcategories/" +
                    category_id +
                    "?view_nosupremejob_count=1";
            }
            $(".main-loader").show();
            dms_app
                .ajaxRequest(url, "", "get")
                .then((res) => {
                    $(".main-loader").hide();
                    if (res.data.length > 0) {
                        $.each(res.data, function (key, value) {
                            var text = value.title;
                            if (view_nosupremejob_count == "1") {
                                text =
                                    value.title + " (" + value.jobs_count + ")";
                            }
                            $subcategory.append(
                                $("<option></option>")
                                    .attr("value", value.id)
                                    .text(text)
                            );
                        });
                    }
                })
                .catch((err) => {
                    return false;
                });
        }
    },
    getCategory: function (course, view_nosupremejob_count = 0) {
        var course_id = $(course).val();
        var $category = $("#category");
        $category.empty(); // remove old options
        $category.append(
            $("<option></option>").attr("value", "").text("Please Select")
        );
        if (course_id != "") {
            var url = "admin/categories/" + course_id;
            if (view_nosupremejob_count == 1) {
                url =
                    "admin/categories/" +
                    course_id +
                    "?view_nosupremejob_count=1";
            }
            $(".main-loader").show();
            dms_app
                .ajaxRequest(url, "", "get")
                .then((res) => {
                    $(".main-loader").hide();
                    if (res.data.length > 0) {
                        $.each(res.data, function (key, value) {
                            var text = value.title;
                            if (view_nosupremejob_count == "1") {
                                text =
                                    value.title + " (" + value.jobs_count + ")";
                            }
                            $category.append(
                                $("<option></option>")
                                    .attr("value", value.id)
                                    .text(text)
                            );
                        });
                    }
                })
                .catch((err) => {
                    return false;
                });
        }
    },
    addCartEvent: function (ele) {
        var eventSlug = $(ele).attr("data-event");
        dms_app.addEventToCart(eventSlug, ele);
        // var url = 'verify-offer';
        // $(".main-loader").show();
        // var l = Ladda.create($(ele).get(0));
        // l.start();
        // dms_app.ajaxRequest(url,'','get').then(res => {
        // 	var data = res.data;
        // 	if(data.success == "true"){
        // 		if(data.add_to_cart == "true"){
        // 			dms_app.addEventToCart(eventSlug, ele);
        // 		}else{
        // 			Swal.fire({
        // 				text : "Adding more Conferences to cart will remove your current applied offer.",
        // 				icon: 'info',
        // 				showCancelButton: true,
        // 				confirmButtonText: 'Yes, add event!',
        // 				buttonsStyling: false,
        // 				customClass:{
        // 					confirmButton: 'btn btn-primary btn-rounded btn-wh-140-40 me-2',
        // 					cancelButton: 'btn btn-light2 btn-rounded btn-wh-140-40',
        // 				}
        // 			}).then((result)=>{
        // 				if(result.value){
        // 					dms_app.addEventToCart(eventSlug, ele);
        // 				}
        // 			});
        // 		}
        // 	}else{
        // 		dms_app.notifyWithtEle(res.data.message,'error');
        // 	}
        // 	if(res.data.redirect != ""){
        // 		window.location = res.data.redirect;
        // 	}
        // }).catch(err => {
        // 	return false;
        // }).then(() => {
        // 	l.stop();
        // });
    },
    addEventToCart: function (eventSlug, ele) {
        var formData = new FormData();
        formData.append("event_slug", eventSlug);
        var l = Ladda.create($(ele).get(0));
        l.start();
        return dms_app
            .ajaxRequest("add-to-cart", formData)
            .then(function (res) {
                if (res.data.success == "true") {
                    if (res.data.message != "") {
                        dms_app.notifyWithtEle(res.data.message, "success");
                    }
                } else {
                    if (res.data.message != "") {
                        dms_app.notifyWithtEle(res.data.message, "error");
                    }
                }
                if (res.data.redirect != "") {
                    window.location = res.data.redirect;
                }
            })
            .then(() => {
                l.stop();
            });
    },
    addPackageToCart: function (ele) {
        var packageId = $(ele).attr("data-package");
        var formData = new FormData();
        formData.append("package_id", packageId);
        var l = Ladda.create($(ele).get(0));
        l.start();
        return dms_app
            .ajaxRequest("add-package-to-cart", formData)
            .then(function (res) {
                if (res.data.success == "true") {
                    if (res.data.message != "") {
                        dms_app.notifyWithtEle(res.data.message, "success");
                    }
                } else {
                    if (res.data.message != "") {
                        dms_app.notifyWithtEle(res.data.message, "error");
                    }
                }
                if (res.data.redirect != "") {
                    window.location = res.data.redirect;
                }
            })
            .then(() => {
                l.stop();
            });
    },
    getJarTax: function () {
        $("#billingerror").hide();
        var address = $("#address").val();
        var state_id = $("#state_id").val();
        var city = $("#city").val();
        var zip = $("#zipcode").val();
        if (address != "" && state_id != "" && city != "" && zip != "") {
            var formData = new FormData();
            formData.append("address", address);
            formData.append("state_id", state_id);
            formData.append("city", city);
            formData.append("zip", zip);
            dms_app.ajaxRequest("get-tax", formData).then(function (res) {
                if (res.data.success == "false") {
                    $("#billingerror").html(res.data.message);
                    $("#billingerror").show();
                    return false;
                }
                if (res.data.success == "true") {
                    $("#billingerror").html("");
                    $("#billingerror").hide();
                    var packagePrice = $(".select-package:checked")
                        .parents(".lbl-planbox")
                        .find(".package-price")
                        .text();
                    var taxAmount = parseFloat(res.data.taxAmount);
                    var totalDue = parseFloat(packagePrice) + taxAmount;
                    $("#taxAmount").html("$" + taxAmount);
                    $("#totalDue").html("$" + totalDue);
                    //console.log("taxResponse", res.data.taxResponse);
                    return false;
                }
            });
            return false;
        }
    },

};

$(".onlyNumerics").keypress(function (e) {
       var length = jQuery(this).val().length;
       if(length > 9) {
            return false;
       } else if(e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
       } else if((length == 0) && (e.which == 48)) {
            return false;
       }
      });
